///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


/**
 * 数组的本质: 引用类型
 *
 *
 */

var arr1 = [3, 5, 6, 7];

var arr2 = arr1;

arr2[0] = 5;

console.log(arr1[0], arr2[0]);


//-------------------------------------------------------------------------------------------------------------------//


/**
 * 求数组中 arr1[0], arr2[0] 的输出结果
 *
 *
 */

var arr1 = [3, 5, 7, 8, 2],
    arr2 = arr1;

arr2[0] = 5;

console.log(arr1[0], arr2[0]);                      // 5 5

console.log(arr1 === arr2);                         // true


//-------------------------------------------------------------------------------------------------------------------//


/**
 * 如何克隆数组
 *
 *
 */

var arr1 = [3, 5, 7, 8, 2];

arr2 = arr1;                        // 此时仅复制的为 arr1 的地址

arr2 = arr1.slice();


//-------------------------------------------------------------------------------------------------------------------//


/**
 * 数组求和
 *
 *
 */

var arr = [3, 5, 7, 8, 2];

var sum = 0;

for(var i = 0; i < arr.lenght; i++) {

    sum += arr[i];
}


//-------------------------------------------------------------------------------------------------------------------//


/**
 * 枚举二纬数组
 *
 *
 */

var arr = [
    [1, 2, 34],
    [234, 1, 1],
    [44, 4, 11]
];


for(var i = 0; i < arr.length; i++) {

    var subArr = arr[i];

    for(var j = 0; j < subArr.length; j++) {

        console.log(subArr[j]);
    }
}


//-------------------------------------------------------------------------------------------------------------------//


/**
 * 二纬数组求和
 *
 *
 */

var arr = [
    [1, 2, 34],
    [234, 1, 1],
    [44, 4, 11]
];

var sum = 0;


for (var i = 0; i < arr.length; i++) {

    for (var j = 0; j < arr[i].length; j++) {

        sum += arr[i][j];
    }
}

console.log(sum);


//-------------------------------------------------------------------------------------------------------------------//


/**
 * 拼接数组中的每一项，并以逗号分隔
 *
 *
 */

var arr = [3, 5, 7, 8, 2];

var str = "";

for (var i = 0; i < arr.length; i++) {

    str += arr[i];

    if (i !== arr.length - 1) {

        str += ',';
    }
}

console.log(str);


//-------------------------------------------------------------------------------------------------------------------//


/**
 * 数组拼接
 *
 *
 */


var arr1 = [34, 5, 2, 1];
arr2 = ['abc', 'bcd'];

var newArr = arr1.concat(arr2);


//-------------------------------------------------------------------------------------------------------------------//


/**
 * 用户自定义数组长度和数组每一项的内容
 *
 *
 */

var len = +prompt('请输入数组长度');

if (isNaN(len) || len < 0) {

    console.log('输入有误');

} else {

    var arr = new Array(len);

    for (var i = 0; i < arr.length; i++) {

        arr[i] = prompt('请输入第' + (i + 1) + '项的值');
    }
}

console.log(arr);


//-------------------------------------------------------------------------------------------------------------------//


/**
 * 根据输入长度输出 斐波那契数组
 *
 *
 */


let len = +prompt('请输入斐波那契数组长度');

if (isNaN(len) || len < 0) {

    alert('请输入大于零的整数');

} else {
    1
    let arr = new Array(len);

    for (let i = 0; i < len; i++) {

        if (i === 0 || i === 1) {

            arr[i] = 1;

        } else {

            arr[i] = arr[i - 1] + arr[i - 2];
        }
    }

    console.log(arr);
}


//-------------------------------------------------------------------------------------------------------------------//


/**
 * 冒泡排序
 *
 *
 */

var arr = [102, 2, 1414, 31, 23, 1351, 513, 241, 11];

for (let i = 0; i < arr.length; i++) {

    for (let j = 0; j < arr.length - i; j++) {

        if (arr[i] > arr[i + j]) {

            let temp = arr[i];

            arr[i] = arr[i + j];

            arr[i + j] = temp;
        }
    }
}

console.log(arr);


//-------------------------------------------------------------------------------------------------------------------//


/**
 * 获取出现频率最高的数字
 *
 *
 */

var arr = [1, 2, 2, 24,24,24, 24, 4, 4, 4, 4, 44, 2, 2, 2, 1, 1, 14, 14, 1, 1, 1, 1, 1, 123, 123, 24, 14, 431];

var record = {};

for (let i = 0; i < arr.length; i++) {

    if (record[arr[i]]) {

        record[arr[i]]++;

    } else {

        record[arr[i]] = 1;
    }
}

var result;

for (let prop in record) {

    if (!result ||result.freq < record[prop]) {

        result = {
            number: prop,
            freq: record[prop]
        }
    }
}

console.log(result);


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
