///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// checked sort


//-------------------------------------------------------------------------------------------------------------------//


const arr = [4, 1, 6, 9, 3, 2, 8, 7];


// 根据条件判断是否需要交换
function compare(a, b) {
    return b < a;
}


// 交换数据中两个子项的位置
function exchange(arr, a, b) {
    let temp = arr[a];
    arr[a] = arr[b];
    arr[b] = temp;
}


// 循环对比排序
function sort(arr) {

    for (let i = 0; i < arr.length; i++) {

        let k = 0;

        for (let j = 0; j < arr.length - 1 - i; j++) {

            if (compare(arr[j], arr[j + 1])) {

                k = j;
            }
        }

        exchange(arr, k, arr.length - 1 - i);
    }
}

sort(arr);
console.log(arr);


// 任何一种排序算法没有优劣之分, 只有是否合适的场景


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////